insert into ACCOUNT(ACCOUNT_CODE)
(
select DISTINCT TRIM(BOTH ' ' FROM ACCOUNT) 'ACCOUNT'
from USAGE_DOLLAR_TEMP T1
WHERE NOT EXISTS(
SELECT * FROM ACCOUNT T2
WHERE T2.ACCOUNT_CODE = T1.ACCOUNT
))

-- The SQL query necessary for selecting the lighting meters when the meter field is blank
SELECT DISTINCT 
CASE WHEN TRIM(BOTH ' ' FROM METER) LIKE '' THEN (CONCAT("-",TRIM(BOTH ' ' FROM ACCOUNT)))
ELSE (TRIM(BOTH ' ' FROM METER)) END
, ACCOUNT.ACCOUNT_ID, TRIM(BOTH ' ' FROM SERVICE_ID) 'SOCKET', COMMODITY.COMMODITY_ID
FROM USAGE_DOLLAR_TEMP
JOIN COMMODITY ON TRIM(BOTH ' ' FROM USAGE_DOLLAR_TEMP.UTILITY_CODE) = COMMODITY.COMMODITY_CODE
JOIN ACCOUNT ON TRIM(BOTH ' ' FROM USAGE_DOLLAR_TEMP.ACCOUNT) = ACCOUNT.ACCOUNT_CODE

-- INSERT statement for the meter table 
insert into METER(METER_CODE, COMMODITY_ID, ACCOUNT_ID, SOCKET)
(SELECT * FROM
(SELECT METER, COMMODITY_ID, ACCOUNT.ACCOUNT_ID, SOCKET FROM
(SELECT DISTINCT 
CASE WHEN TRIM(BOTH ' ' FROM METER) LIKE '' THEN (CONCAT("-",TRIM(BOTH ' ' FROM ACCOUNT))) 
ELSE (TRIM(BOTH ' ' FROM METER))  END "METER", 
CASE WHEN TRIM(BOTH ' ' FROM METER) LIKE '' THEN ("L") 
ELSE (TRIM(BOTH ' ' FROM UTILITY_CODE))  END "UTILITY_CODE",
TRIM(BOTH ' ' FROM ACCOUNT) "ACCOUNT", TRIM(BOTH ' ' FROM SERVICE_ID) 'SOCKET'
FROM USAGE_DOLLAR_TEMP) T2
JOIN COMMODITY ON T2.UTILITY_CODE = COMMODITY.COMMODITY_CODE
JOIN ACCOUNT ON T2.ACCOUNT = ACCOUNT.ACCOUNT_CODE) T1
WHERE NOT EXISTS
(SELECT * FROM METER T3
WHERE T3.ACCOUNT_ID = T1.ACCOUNT_ID
AND T3.METER_CODE = T1.METER
AND T3.SOCKET = T1.SOCKET 
AND T3.COMMODITY_ID = T1.COMMODITY_ID))

-- INSERT INTO THE RATE TO SAVE TIME AND NOT INSERT BY HAND
INSERT INTO RATE(RATE_CODE)
(SELECT RATE_CODE FROM
(SELECT DISTINCT CONCAT(TRIM(BOTH ' ' FROM TYPE_CODE), TRIM(BOTH ' ' FROM ADJUSTMENT_CODE)) "RATE_CODE" 
FROM USAGE_DOLLAR_TEMP) T1
WHERE RATE_CODE NOT LIKE ''
AND NOT EXISTS 
(
SELECT * FROM RATE T2
WHERE T2.RATE_CODE = T1.RATE_CODE
))

-- SELECT FOR THE BILL_LINE_ITEM TABLE 
SELECT * FROM
(SELECT METER_ID, STR_TO_DATE(BILL_PERIOD_DATE,'%Y%m') "BILL_PERIOD_DATE", STR_TO_DATE(START_DATE, '%Y%m%d')"START_DATE",
 STR_TO_DATE(END_DATE, '%Y%m%d')"END_DATE", RATE_ID, CAST(USAGE_VALUE AS DECIMAL(45,3))"USAGE_VALUE",
CAST(COST AS DECIMAL(45,3))"COST" FROM
(SELECT METER, COMMODITY_ID, ACCOUNT.ACCOUNT_ID, SOCKET, BILL_PERIOD_DATE, START_DATE, END_DATE, RATE_CODE, USAGE_VALUE, COST FROM
(SELECT 
CASE WHEN TRIM(BOTH ' ' FROM METER) LIKE '' THEN (CONCAT("-",TRIM(BOTH ' ' FROM ACCOUNT))) 
ELSE (TRIM(BOTH ' ' FROM METER))  END "METER", 
CASE WHEN TRIM(BOTH ' ' FROM METER) LIKE '' THEN ("L") 
ELSE (TRIM(BOTH ' ' FROM UTILITY_CODE))  END "UTILITY_CODE",
TRIM(BOTH ' ' FROM ACCOUNT) "ACCOUNT", TRIM(BOTH ' ' FROM SERVICE_ID) 'SOCKET',
TRIM(BOTH ' ' FROM REVENUE_YEAR_MONTH) "BILL_PERIOD_DATE",
TRIM(BOTH ' ' FROM PREVIOUS_READ_DATE) "START_DATE",
TRIM(BOTH ' ' FROM CURRENT_READ_DATE) "END_DATE",
CASE WHEN CONCAT(TRIM(BOTH ' ' FROM TYPE_CODE), TRIM(BOTH ' ' FROM ADJUSTMENT_CODE)) LIKE '' THEN "OTHER"
 ELSE CONCAT(TRIM(BOTH ' ' FROM TYPE_CODE), TRIM(BOTH ' ' FROM ADJUSTMENT_CODE)) END "RATE_CODE",
TRIM(BOTH ' ' FROM USAGE_VALUE) "USAGE_VALUE",
TRIM(trailing '@' FROM TRIM(TRAILING 'R' FROM TRIM(BOTH ' ' FROM AMOUNT))) "COST"
FROM USAGE_DOLLAR_TEMP) T2
JOIN COMMODITY ON T2.UTILITY_CODE = COMMODITY.COMMODITY_CODE
JOIN ACCOUNT ON T2.ACCOUNT = ACCOUNT.ACCOUNT_CODE) T5
JOIN METER ON T5.METER = METER.METER_CODE
AND T5.ACCOUNT_ID = METER.ACCOUNT_ID
AND T5.SOCKET = METER.SOCKET
AND T5.COMMODITY_ID = METER.COMMODITY_ID
JOIN RATE ON T5.RATE_CODE = RATE.RATE_CODE
) M1

WHERE NOT EXISTS(SELECT * FROM BILL_LINE_ITEM M2
WHERE M2.METER_ID = M1.METER_ID
AND M2.BILL_PERIOD_DATE = M1.BILL_PERIOD_DATE
AND M2.START_DATE = M1.START_DATE
AND M2.END_DATE = M1.END_DATE
AND M2.USAGE_VALUE = M1.USAGE_VALUE
AND M2.COST_VALUE = M1.COST
AND M2.RATE_ID = M1.RATE_ID)

-- INSERT INTO BILL_LINE_ITEM 2 EXECUTES IN ABOUT 60 SECONDS 
INSERT INTO BILL_LINE_ITEM2(ACCOUNT_ID, METER_ID, COMMODITY_ID, SOCKET_ID, RATE_ID, BILL_PERIOD_DATE, START_DATE, 
END_DATE, USAGE_VALUE, COST_VALUE)
SELECT * FROM
(SELECT ACCOUNT_ID, METER_ID, COMMODITY_ID, SOCKET_ID, RATE_ID, BILL_PERIOD_DATE, START_DATE, 
END_DATE, USAGE_VALUE, COST_VALUE 
FROM USAGE_DOLLAR_TEMP2 T1
JOIN ACCOUNT2 ON T1.ACCOUNT_CODE = ACCOUNT2.ACCOUNT_CODE
JOIN METER2 ON T1.METER_CODE = METER2.METER_CODE
JOIN SOCKET2 ON T1.SOCKET_CODE = SOCKET2.SOCKET_CODE
JOIN COMMODITY ON T1.COMMODITY_CODE = COMMODITY.COMMODITY_CODE
JOIN RATE ON T1.RATE_CODE = RATE.RATE_CODE) T1
WHERE NOT EXISTS
(
SELECT * FROM BILL_LINE_ITEM2 T2
WHERE T2.ACCOUNT_ID = T1.ACCOUNT_ID
AND T2.METER_ID = T1.METER_ID
AND T2.COMMODITY_ID = T1.COMMODITY_ID
AND T2.SOCKET_ID = T1.SOCKET_ID
AND T2.RATE_ID = T1.RATE_ID 
AND T2.BILL_PERIOD_DATE = T1.BILL_PERIOD_DATE
AND T2.START_DATE = T1.START_DATE
AND T2.END_DATE = T1.END_DATE
AND T2.USAGE_VALUE = T1.USAGE_VALUE
AND T2.COST_VALUE = T1.COST_VALUE
)


-- VIEW FOR ACCOUNT SOCKET METER
SELECT DISTINCT ACCOUNT_CODE, SOCKET_CODE, METER_CODED
FROM  BILL_LINE_ITEM2 T1
JOIN ACCOUNT2 ON T1.ACCOUNT_ID = ACCOUNT2.ACCOUNT_ID
JOIN METER2 ON T1.METER_ID = METER2.METER_ID
JOIN SOCKET2 ON T1.SOCKET_ID = SOCKET2.SOCKET_ID